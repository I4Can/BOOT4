# Generated by Django 2.1 on 2018-10-07 14:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('repository', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='标题')),
                ('brief', models.CharField(max_length=254, verbose_name='简要')),
                ('illustration', models.ImageField(upload_to='illustration', verbose_name='插图')),
                ('browse', models.IntegerField(default=0)),
                ('like', models.IntegerField(default=0)),
                ('comment', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Article_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('art', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='分类标题')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('like', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='repository.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('like', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answerName', to='repository.Message')),
            ],
        ),
        migrations.CreateModel(
            name='UserArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Article')),
            ],
        ),
        migrations.CreateModel(
            name='UserMsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Message')),
            ],
        ),
        migrations.AddField(
            model_name='userinfo',
            name='avatar',
            field=models.ImageField(null=True, upload_to='', verbose_name='头像'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='create_time',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='nickname',
            field=models.CharField(max_length=32, null=True, verbose_name='昵称'),
        ),
        migrations.AlterField(
            model_name='userinfo',
            name='email',
            field=models.EmailField(max_length=254, verbose_name='邮箱'),
        ),
        migrations.AlterField(
            model_name='userinfo',
            name='password',
            field=models.CharField(max_length=64, verbose_name='密码'),
        ),
        migrations.AlterField(
            model_name='userinfo',
            name='username',
            field=models.CharField(max_length=32, unique=True, verbose_name='用户名'),
        ),
        migrations.AddField(
            model_name='usermsg',
            name='userName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.userInfo'),
        ),
        migrations.AddField(
            model_name='userarticle',
            name='userName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.userInfo'),
        ),
        migrations.AddField(
            model_name='message',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_info', to='repository.userInfo'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='repository.userInfo'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(choices=[(1, '心情随笔'), (2, '时光再忆'), (3, '分享给你')], null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.Category', verbose_name='文章类型'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='like_article',
            field=models.ManyToManyField(through='repository.UserArticle', to='repository.Article'),
        ),
        migrations.AddField(
            model_name='userinfo',
            name='like_msg',
            field=models.ManyToManyField(through='repository.UserMsg', to='repository.Message'),
        ),
    ]
